# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2.3.1
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_KEY }} 
        gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}   
    #- name: Import GPG Key
    #  uses: crazy-max/ghaction-import-gpg@v1
    #  env:
    #     GPG_PRIVATE_KEY: ${{ secrets.GPG_KEY }}
    #     PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    - name: Configure GPG Key
      run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
      env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_KEY }}
    - name: List of keys on gpg
      run: gpg --list-secret-keys --keyid-format LONG
    - name: Publish to key server
      run: gpg --send-key F683B38207FE6E02CDB424CF020FDA48F20E3012
    - name: Publish to maven central
      run: |
         mvn clean deploy --no-transfer-progress --batch-mode -Darguments=-Dgpg.passphrase=${GPG_PASSPHRASE}
      env: 
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      
